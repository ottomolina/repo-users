package com.gsa.ctrl;

import java.sql.Connection;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;

import com.gsa.dao.EstadoDao;
import com.gsa.data.RequestData;
import com.gsa.data.ResponseData;
import com.gsa.orm.GsaOrms.GsaEstado;
import com.gsa.util.Util;

public class EstadoServiceCtrl extends BaseCtrl {
	private ResponseData responseData;
	@Autowired
	private EstadoDao dao;
	
	public ResponseData getInfoEstado(RequestData input) {
		responseData = new ResponseData();
		GsaEstado orm = null;
		Connection conn = null;
		List<GsaEstado> listEstado = new ArrayList<GsaEstado>();
		try {
			conn = getConnection();
			listEstado = dao.select(conn, orm);
			responseData.setData(listEstado);
		} catch (SQLException e) {
			e.printStackTrace();
			setSQLExceptionToResponse(responseData, e);
		} finally {
			closeConnection(conn);
		}
		return responseData;
	}
	
	public ResponseData saveEstado(RequestData input) {
		responseData = new ResponseData();
		if(!Util.isRequestValid(responseData, input, this)) {
			return responseData;
		}
		GsaEstado orm = convertData(input.getData(), GsaEstado.class);
		Connection conn = null;
		try {
			conn = getConnection();
			conn.setAutoCommit(false);
			if(dao.isDuplicate(conn, orm)) {
				setErrorToResponse(responseData, 101, "El registro que intenta guardar ya existe");
			} else {
				Integer v_gsaEstadoId = Integer.parseInt(
						String.valueOf(
								dao.getNextId(conn)));
				orm.setGsa_est_id(v_gsaEstadoId);
				Integer v_result = dao.insert(conn, orm);
				if(v_result == 1) {
					responseData.setResult(Util.OK);
				} else {
					setErrorToResponse(responseData, 102, "Ocurri√≥ un error al guardar el registro");
				}
				connectionCommit(conn);
			}
		} catch(SQLException e) {
			e.printStackTrace();
			connectionRollback(conn);
			setSQLExceptionToResponse(responseData, e);
		} finally {
			closeConnection(conn);
		}
		return responseData;
	}
	
}
