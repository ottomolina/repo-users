package com.gsa.dao;

import java.sql.Connection;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import org.apache.log4j.Logger;

import com.gsa.orm.GsaAplicacion;
import com.gsa.orm.GsaOrms.GsaEstado;

public class EstadoDao extends GeneralDao {
	private final Logger log = Logger.getLogger(EstadoDao.class);
	
	public Integer getNextId(Connection conn) throws SQLException {
		String sql = "select ifnull(max(gsa_est_id),0)+1 from " + GsaEstado.TABLENAME;
		
		log.debug("getNextId: " + sql);
		return getOneColumnRow(conn, sql, null, Integer.class);
	}
	
	public Boolean isDuplicate(Connection conn, GsaEstado orm) throws SQLException {
		String sql = "select count(1) from " + GsaEstado.TABLENAME;
		sql = sql + " where upper(gsa_est_desc) = upper(?) ";
		sql = sql + " and gsa_tab_id = ? ";
		
		Object[] param = null;
		if(orm.getGsa_est_id() != null) {
			sql = sql + " and gsa_est_id != ?";
			param = new Object[] { orm.getGsa_est_desc(), orm.getGsa_tab_id(), orm.getGsa_est_id() };
		} else {
			param = new Object[] { orm.getGsa_est_desc(), orm.getGsa_tab_id() };
		}
		log.debug("isDuplicate: " + sql);
		if(getOneColumnRow(conn, sql, param, Integer.class) > 0) {
			return true;
		} else {
			return false;
		}
	}
	
	public Integer validIntegrity(Connection conn, GsaEstado orm) throws SQLException {
		String sql = "select count(1) from " + GsaAplicacion.TABLENAME;
		sql = sql + " where gsa_est_id = ? ";
		Object[] param = { orm.getGsa_tab_id() };

		log.debug("validIntegrity: " + sql);
		return getOneColumnRow(conn, sql, param, Integer.class);
	}
	
	public Integer insertEstado(Connection conn, GsaEstado orm) throws SQLException {
		String sql = "insert into " + GsaEstado.TABLENAME;
		sql = sql + "(gsa_est_id,gsa_est_desc,gsa_tab_id) ";
		sql = sql + "values(?,?,?)";
		
		log.debug("insertEstado: ".concat(sql));
		Object[] param = { orm.getGsa_est_id(), orm.getGsa_est_desc(), orm.getGsa_tab_id() };
		return insert(conn, sql, param);
	}
	
	public List<GsaEstado> select(Connection conn, GsaEstado filtro) throws SQLException {
		String sql = "select gsa_est_id, gsa_est_desc, gsa_tab_id from " + GsaEstado.TABLENAME;
		
		Object[] params = null;
		if(filtro != null) {
			List<Object> p = new ArrayList<Object>();
			String where = "";
			if(filtro.getGsa_est_id() != null) {
				where = where + " gsa_est_id = ? and ";
				p.add(filtro.getGsa_est_id());
			}
			if(filtro.getGsa_est_desc() != null) {
				where = where + " upper(gsa_est_desc) = upper(?) and ";
				p.add(filtro.getGsa_est_desc());
			}
			if(filtro.getGsa_tab_id() != null) {
				where = where + " gsa_tab_id = ?     ";
				p.add(filtro.getGsa_tab_id());
			}
			if(p.size() != 0) {
				sql = sql + " where " + where.substring(0, where.length()-5);
				params = p.toArray();
			}
		}
		log.debug("getListEstado: " + sql);
		return selectStatement(conn, sql, params, GsaEstado.class);
	}
	
	public Integer update(Connection conn, GsaEstado orm) throws SQLException {
		String sql = "update " + GsaEstado.TABLENAME;
		sql = sql + " set gsa_est_desc = ?";
		sql = sql + " where gsa_est_id = ?";
		sql = sql + " and gsa_tab_id = ? ";
		
		log.debug("updateEstado: " + sql);
		Object[] param = { orm.getGsa_est_desc(), orm.getGsa_est_id(), orm.getGsa_tab_id() };
		return update(conn, sql, param);
	}
	
	public Integer delete(Connection conn, GsaEstado orm) throws SQLException {
		String sql = "delete from " + GsaEstado.TABLENAME;
		sql = sql + " where gsa_est_id = ?";
		sql = sql + " and gsa_tab_id = ?";
		
		log.debug("deleteEstado: " + sql);
		Object[] param = { orm.getGsa_est_id(), orm.getGsa_tab_id() };
		return update(conn, sql, param);
	}
	
}
