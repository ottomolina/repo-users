package com.gsa.ctrl;

import java.sql.Connection;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;

import com.gsa.dao.AplicacionDao;
import com.gsa.data.RequestData;
import com.gsa.data.ResponseData;
import com.gsa.orm.GsaAplicacion;
import com.gsa.util.Util;

public class AplicacionServiceCtrl extends BaseCtrl {
	private ResponseData responseData;
	@Autowired
	private AplicacionDao dao;
	
	public ResponseData getInfoAplicacion(RequestData input) {
		responseData = new ResponseData();
		GsaAplicacion orm = null;
		Connection conn = null;
		List<GsaAplicacion> listAplicacion = new ArrayList<GsaAplicacion>();
		try {
			conn = getConnection();
			listAplicacion = dao.select(conn, orm);
			responseData.setResult(Util.OK);
			responseData.setData(listAplicacion);
		} catch (SQLException e) {
			e.printStackTrace();
			setSQLExceptionToResponse(responseData, e);
		} finally {
			closeConnection(conn);
		}
		return responseData;
	}
	
	public ResponseData saveAplicacion(RequestData input) {
		responseData = new ResponseData();
		if(!Util.isRequestValid(responseData, input, this)) {
			return responseData;
		}
		GsaAplicacion orm = convertData(input.getData(), GsaAplicacion.class);
		Connection conn = null;
		try {
			conn = getConnection();
			conn.setAutoCommit(false);
			if(dao.isDuplicate(conn, orm)) {
				setErrorToResponse(responseData, 101, "El registro que intenta guardar ya existe");
			} else {
				Integer v_gsaAplicacionId = Integer.parseInt(
						String.valueOf(dao.getNextId(conn)));
				orm.setGsa_app_id(v_gsaAplicacionId);
				Integer v_result = dao.insert(conn, orm);
				if(v_result == 1) {
					responseData.setResult(Util.OK);
				} else {
					setErrorToResponse(responseData, 102, "Ocurrió un error al guardar el registro");
				}
				connectionCommit(conn);
			}
		} catch(SQLException e) {
			e.printStackTrace();
			connectionRollback(conn);
			setSQLExceptionToResponse(responseData, e);
		} finally {
			closeConnection(conn);
		}
		return responseData;
	}
	
	public ResponseData updateAplicacion(RequestData input) {
		responseData = new ResponseData();
		if(!Util.isRequestValid(responseData, input, this)) {
			return responseData;
		}
		GsaAplicacion orm = convertData(input.getData(), GsaAplicacion.class);
		Connection conn = null;
		try {
			conn = getConnection();
			conn.setAutoCommit(false);
			
			if(dao.isDuplicate(conn, orm)) {
				setErrorToResponse(responseData, 101, "El registro que intenta guardar ya existe");
			} else {
				Integer v_result = dao.update(conn, orm);
				if(v_result == 1) {
					responseData.setResult(Util.OK);
				} else {
					setErrorToResponse(responseData, 102, "Ocurrió un error al guardar el registro");
				}
				connectionCommit(conn);
			}
		} catch(SQLException e) {
			e.printStackTrace();
			connectionRollback(conn);
			setSQLExceptionToResponse(responseData, e);
		} finally {
			closeConnection(conn);
		}
		return responseData;
	}
	
}
