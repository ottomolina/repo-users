package com.gsu.dao;

import java.sql.Connection;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import com.gsu.orm.GsuUserOrm;
import com.gsu.util.Util;

public class GsuUserDao extends GeneralDao {
	
	public Long getNextId(Connection conn) throws SQLException {
		String sql = "select nvl(max(userid), 0) + 1 from " + GsuUserOrm.TABLENAME;
		return getOneColumnRow(conn, sql, null, Long.class);
	}
	
	public int insert(Connection conn, GsuUserOrm user) throws SQLException {
		String sql = "insert into " + GsuUserOrm.TABLENAME + "(";
		sql = sql + " GSU_USR_ID, GSU_USR_NOMBRE, GSU_USR_APELLIDO, GSU_USR_LOGIN,";
		sql = sql + " GSU_USR_PASSWORD, GSU_USR_DATE, GSU_USR_EMAIL, GSU_USR_ESTADO)";
		sql = sql + " values(?,?,?,?,?,?,?,?)";
		
		Object[] params = {user.getGsu_usr_id(), user.getGsu_usr_nombre(), user.getGsu_usr_apellido(), user.getGsu_usr_login(),
				user.getGsu_usr_password(), user.getGsu_usr_date(), user.getGsu_usr_email(), user.getGsu_usr_estado() };
		return insert(conn, sql, params);
	}
	
	public List<GsuUserOrm> select(Connection conn, GsuUserOrm filter) throws SQLException {
		String sql = "select ";
		sql = sql + " GSU_USR_ID, GSU_USR_NOMBRE, GSU_USR_APELLIDO, GSU_USR_LOGIN,";
		sql = sql + " GSU_USR_PASSWORD, GSU_USR_DATE, GSU_USR_EMAIL, GSU_USR_ESTADO";
		sql = sql + " from " + GsuUserOrm.TABLENAME;
		
		Object[] params = null;
		if(filter != null) {
			List<Object> p = new ArrayList<Object>();
			String where = "";
			if(filter.getGsu_usr_id() != null) {
				where = where + " userid=? and";
				p.add(filter.getGsu_usr_id());
			}
			if(filter.getGsu_usr_nombre() != null || !"".equals(filter.getGsu_usr_nombre())) {
				where = where + " username=? and";
				p.add(filter.getGsu_usr_nombre());
			}
			if(filter.getGsu_usr_apellido() != null || !"".equals(filter.getGsu_usr_apellido())) {
				where = where + " userlast_name=? and";
				p.add(filter.getGsu_usr_apellido());
			}
			if(filter.getGsu_usr_login() != null || !"".equals(filter.getGsu_usr_login())) {
				where = where + " userlogin=? and";
				p.add(filter.getGsu_usr_login());
			}
//			if(filter.getGsu_usr_password() != null || !"".equals(filter.getGsu_usr_password())) {
//				where = where + " userpassword=? and";
//				p.add(filter.getGsu_usr_password());
//			}
			if(filter.getGsu_usr_email() != null || !"".equals(filter.getGsu_usr_email())) {
				where = where + " useremail=? and";
				p.add(filter.getGsu_usr_email());
			}
			if(filter.getGsu_usr_estado() != null || !"".equals(filter.getGsu_usr_estado())) {
				where = where + " usereestado=?    ";
				p.add(filter.getGsu_usr_estado());
			}
			if(!"".equals(where)) {
				sql = sql + " where " + where.substring(0, where.length()-4);
				params = p.toArray();
			}
		}
		System.out.println("GsuUserDao.select(): " + sql);
		return selectStatement(conn, sql, params, GsuUserOrm.class);
	}
	
	public int updateUser(Connection conn, GsuUserOrm user) throws SQLException {
		String sql = "update " + GsuUserOrm.TABLENAME;
		String set = "";
		List<Object> params = new ArrayList<Object>();
		if(user.getUsername() != null) {
			set = set + " username=?,";
			params.add(user.getUsername());
		}
		if(user.getUserlast_name() != null) {
			set = set + " userlast_name=?,";
			params.add(user.getUserlast_name());
		}
		if(user.getUserlogin() != null) {
			set = set + " userlogin=?,";
			params.add(user.getUserlogin());
		}
		if(user.getUserpassword() != null) {
			set = set + " userpassword=?,";
			params.add(user.getUserpassword());
		}
		if(user.getUseremail() != null) {
			set = set + " useremail=?,";
			params.add(user.getUseremail());
		}
		if(user.getUserestado() != null) {
			set = set + " userestado=?,";
			params.add(user.getUserestado());
		}
		sql = sql + " set" + set.substring(0, set.length()-2);
		sql = sql + " where userid=? ";
		params.add(user.getUserid());
		return update(conn, sql, params.toArray());
	}
	
	public int deleteUser(Connection conn, GsuUserOrm user) throws SQLException {
		String sql = "update " + GsuUserOrm.TABLENAME;
		sql = sql + " set userestado = ( select codigo " + 
										"  from tbl_catalogo " + 
										" where tablaid = (select tablaid " + 
										"                    from tbl_tabla " + 
										"                   where tablaname like '" + Util.CAT_ESTADO_USER + "') " + 
										"   and upper(valor) like 'ELIMINADO') ";
		sql = sql + " where userid=?";
		return update(conn, sql, new Object[] {user.getUserid()});
	}
	
}
