package com.gsa.dao;

import java.sql.Connection;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import org.apache.log4j.Logger;

import com.gsa.orm.GsaAplicacion;
import com.gsa.orm.GsaPermiso;

public class PermisoDao extends GeneralDao {
private final Logger log = Logger.getLogger(AplicacionDao.class);
	
	public Integer getNextId(Connection conn, GsaAplicacion app) throws SQLException {
		String sql = "select ifnull(max(gsa_est_id),0)+1 from " + GsaPermiso.TABLENAME;
		sql = sql + " where gsa_app_id = ? ";
		
		Object[] param = { app.getGsa_app_id() };
		
		log.debug("getNextId: " + sql);
		return getOneColumnRow(conn, sql, param, Integer.class);
	}
	
	public Boolean isDuplicate(Connection conn, GsaPermiso orm) throws SQLException {
		String sql = "select count(1) from " + GsaPermiso.TABLENAME;
		sql = sql + " where gsa_app_id = ? ";
		sql = sql + " and gsa_usr_id = ?";
		
		Object[] param = { orm.getGsa_app_id(), orm.getGsa_usr_id() };
		log.debug("isDuplicate: " + sql);
		if(getOneColumnRow(conn, sql, param, Integer.class) > 0) {
			return true;
		} else {
			return false;
		}
	}
	
	public Integer validIntegrity(Connection conn, GsaPermiso orm) throws SQLException {
		/**
		 * De momento no existen tablas contra las cuales validar la integridad relacional de esta tabla
		 */
//		String sql = "select count(1) from " + GsaPermiso.TABLENAME;
//		sql = sql + " where gsa_app_id = ? ";
//		Object[] param = { orm.getGsa_app_id() };
//
//		log.debug("validIntegrity: " + sql);
//		return getOneColumnRow(conn, sql, param, Integer.class);
		return 0;
	}
	
	public Integer insertPermiso(Connection conn, GsaPermiso orm) throws SQLException {
		String sql = "insert into " + GsaPermiso.TABLENAME;
		sql = sql + "(gsa_per_id, gsa_app_id, gsa_usr_id, gsa_est_id) ";
		sql = sql + "values(?,?,?,?)";
		
		log.debug("insertPermiso: ".concat(sql));
		Object[] param = { orm.getGsa_per_id(), orm.getGsa_app_id(), orm.getGsa_usr_id(), orm.getGsa_est_id() };
		return insert(conn, sql, param);
	}
	
	public List<GsaPermiso> getListPermiso(Connection conn, GsaPermiso filtro) throws SQLException {
		String sql = "select gsa_per_id, gsa_app_id, gsa_usr_id, gsa_est_id from " + GsaPermiso.TABLENAME;
		
		Object[] params = null;
		if(filtro != null) {
			List<Object> p = new ArrayList<Object>();
			String where = "";
			if(filtro.getGsa_per_id() != null) {
				where = where + " gsa_per_id = ? and ";
				p.add(filtro.getGsa_per_id());
			}
			if(filtro.getGsa_app_id() != null) {
				where = where + " gsa_app_id = ? and ";
				p.add(filtro.getGsa_app_id());
			}
			if(filtro.getGsa_usr_id() != null) {
				where = where + " gsa_usr_id = ? and ";
				p.add(filtro.getGsa_usr_id());
			}
			if(filtro.getGsa_est_id() != null) {
				where = where + " gsa_est_id = ?     ";
				p.add(filtro.getGsa_est_id());
			}
			if(p.size() != 0) {
				sql = sql + " where " + where.substring(0, where.length()-5);
				params = p.toArray();
			}
		}
		log.debug("getListPermiso: " + sql);
		return selectStatement(conn, sql, params, GsaPermiso.class);
	}
	
	public Integer updatePermiso(Connection conn, GsaPermiso orm) throws SQLException {
		String sql = "update " + GsaPermiso.TABLENAME;
		sql = sql + " set gsa_est_id = ?";
		sql = sql + " where gsa_app_id = ?";
		sql = sql + " and gsa_per_id = ?";
		
		log.debug("updatePermiso: " + sql);
		Object[] param = { orm.getGsa_est_id(), orm.getGsa_app_id(), orm.getGsa_per_id() };
		return update(conn, sql, param);
	}
	
	public Integer deletePermiso(Connection conn, GsaPermiso orm) throws SQLException {
		String sql = "delete from " + GsaPermiso.TABLENAME;
		sql = sql + " where gsa_app_id = ?";
		sql = sql + " and gsa_per_id = ?";
		
		log.debug("deletePermiso: " + sql);
		Object[] param = { orm.getGsa_app_id(), orm.getGsa_per_id() };
		return update(conn, sql, param);
	}
	
}
